<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/15/2021 5:23:07 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-573A3AR"
  DTS:CreatorName="DESKTOP-573A3AR\ThinkBook"
  DTS:DTSID="{760E0866-DC4D-44F2-87CC-BE4843ADA699}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.152"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="4"
  DTS:VersionGUID="{931DBDE2-0E3E-4C5F-BD6D-0F242038D311}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DB_Conn_TechBrothersIT]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{C8530E6A-85F9-447C-85AC-B406FA79FBE9}"
      DTS:ObjectName="DB_Conn_TechBrothersIT">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DESKTOP-573A3AR;Initial Catalog=dars25;Integrated Security=True;Application Name=SSIS-Package1-{C8530E6A-85F9-447C-85AC-B406FA79FBE9}DESKTOP-573A3AR.dars251;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6AA10218-948A-4E49-A1AD-DBA78D5A8556}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SchemaName">
      <DTS:VariableValue
        DTS:DataType="8">dbo</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{99ED2DD6-16BB-449B-8D37-EBC9CA27124A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFolder">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\ThinkBook\Desktop\Tab_Customer\SourceFolder</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D453372C-50FB-4AF3-A398-AF29995212BE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TableName">
      <DTS:VariableValue
        DTS:DataType="8">SSIS158</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{C39D4E5A-72AE-4EB4-84E3-7CF907A16C14}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_a5372f0e16e446b0afd819a33d217420"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::SchemaName,User::SourceFolder,User::TableName">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a5372f0e16e446b0afd819a33d217420.Properties.Settings.get_Default():ST_a5372f0e16e446b0afd819a33d217420.Properties.Sett" +
    "ings")]

namespace ST_a5372f0e16e446b0afd819a33d217420.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Data.OleDb;
using System.Data.SqlClient;
#endregion

namespace ST_a5372f0e16e446b0afd819a33d217420
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string FolderPath = Dts.Variables["User::SourceFolder"].Value.ToString();
            string TableName = Dts.Variables["User::TableName"].Value.ToString();
            string SchemaName = Dts.Variables["User::SchemaName"].Value.ToString();

            var directory = new DirectoryInfo(FolderPath);
            FileInfo[] files = directory.GetFiles();

            //Declare and initilize variables
            string fileFullPath = "";
            SqlConnection myADONETConnection = new SqlConnection();
            myADONETConnection = (SqlConnection)(Dts.Connections["DB_Conn_TechBrothersIT"].AcquireConnection(Dts.Transaction) as SqlConnection);

            //Get one Book(Excel file at a time)
            foreach (FileInfo file in files)
            {
                fileFullPath = FolderPath + "\\" + file.Name;

                string filename = "";
                filename = file.Name;

                //Create Excel Connection
                string ConStr;
                string HDR;
                HDR = "YES";
                ConStr = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + fileFullPath + ";Extended Properties=\"Excel 12.0;HDR=" + HDR + ";IMEX=0\"";
                OleDbConnection cnn = new OleDbConnection(ConStr);

                //Get Sheet Name
                cnn.Open();
                DataTable dtSheet = cnn.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, null);
                string sheetname;
                sheetname = "";
                //Only read data from provided SheetNumber

                foreach (DataRow drSheet in dtSheet.Rows)
                {

                    if (drSheet["TABLE_NAME"].ToString().Contains("$"))
                    {
                        sheetname = drSheet["TABLE_NAME"].ToString();
                        // MessageBox.Show(sheetname);

                        //Load the DataTable with Sheet Data so we can get the column header
                        OleDbCommand oconn = new OleDbCommand("select top 1 * from [" + sheetname + "]", cnn);
                        OleDbDataAdapter adp = new OleDbDataAdapter(oconn);
                        DataTable dt = new DataTable();
                        adp.Fill(dt);
                        cnn.Close();

                        //Prepare Header columns list so we can run against Database to get matching columns for a table.
                        string ExcelHeaderColumn = "";
                        string SQLQueryToGetMatchingColumn = "";
                        for (int i = 0; i < dt.Columns.Count; i++)
                        {
                            if (i != dt.Columns.Count - 1)
                                ExcelHeaderColumn += "'" + dt.Columns[i].ColumnName + "'" + ",";
                            else
                                ExcelHeaderColumn += "'" + dt.Columns[i].ColumnName + "'";
                        }

                        SQLQueryToGetMatchingColumn = "select STUFF((Select  ',['+Column_Name+']' from Information_schema.Columns where Table_Name='" +
                            TableName + "' and Table_SChema='" + SchemaName + "'" +
                            "and Column_Name in (" + @ExcelHeaderColumn + ") for xml path('')),1,1,'') AS ColumnList";

                        // MessageBox.Show(SQLQueryToGetMatchingColumn);
                        // MessageBox.Show(ExcelHeaderColumn);


                        //Get Matching Column List from SQL Server
                        string SQLColumnList = "";
                        SqlCommand cmd = myADONETConnection.CreateCommand();
                        cmd.CommandText = SQLQueryToGetMatchingColumn;
                        SQLColumnList = (string)cmd.ExecuteScalar();

                        // MessageBox.Show(" Matching Columns: " + SQLColumnList);


                        //Use Actual Matching Columns to get data from Excel Sheet
                        OleDbConnection cnn1 = new OleDbConnection(ConStr);
                        cnn1.Open();
                        OleDbCommand oconn1 = new OleDbCommand("select " + SQLColumnList + ",'" + filename + "' AS FileName" + ",'" + sheetname + "' AS SheetName from [" + sheetname + "]", cnn1);
                        OleDbDataAdapter adp1 = new OleDbDataAdapter(oconn1);
                        DataTable dt1 = new DataTable();
                        adp1.Fill(dt1);
                        cnn1.Close();


                        //Load Data from DataTable to SQL Server Table.
                        using (SqlBulkCopy BC = new SqlBulkCopy(myADONETConnection))
                        {
                            BC.DestinationTableName = SchemaName + "." + TableName;
                            foreach (var column in dt1.Columns)
                                BC.ColumnMappings.Add(column.ToString(), column.ToString());
                            BC.WriteToServer(dt1);
                        }

                    }
                }

            }
            // TODO: Add your code here

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_a5372f0e16e446b0afd819a33d217420.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{e4048ca5-d400-4076-b978-66981551252a}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a5372f0e16e446b0afd819a33d217420</RootNamespace>
    <AssemblyName>ST_a5372f0e16e446b0afd819a33d217420</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_a5372f0e16e446b0afd819a33d217420</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_a5372f0e16e446b0afd819a33d217420</msb:DisplayName>
    <msb:ProjectId>{D16585CE-BC71-4360-A48E-A92F80F40B4B}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_a5372f0e16e446b0afd819a33d217420.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a5372f0e16e446b0afd819a33d217420")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a5372f0e16e446b0afd819a33d217420")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a5372f0e16e446b0afd819a33d217420.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a5372f0e16e446b0afd819a33d217420.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a5372f0e16e446b0afd819a33d217420.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a5372f0e16e446b0afd819a33d217420.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a5372f0e16e446b0afd819a33d217420.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_a5372f0e16e446b0afd819a33d217420.dll">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
UAgAACNTdHJpbmdzAAAAABgOAAD0AwAAI1VTAAwSAAAQAAAAI0dVSUQAAAAcEgAALAIAACNCbG9i
AAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAADgAAAAFAAAABgAAAAkAAAABAAAAQgAAAAIA
AAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAAHQEAQAAAAAABgALA3UGBgCa
A3UGBgBXAmIGDwDpBgAABgCEAhcFBgDuAhcFBgDPAhcFBgCBAxcFBgArAxcFBgBEAxcFBgCbAhcF
BgC2AsgDCgBfAyMECgCtASMEDgCVBekHBgC2BS4ADgBzBWsABgA7BnYHDgAuCF8ADgDkAF8ADgBD
COkHBgDHB6oEBgD3AKoEBgCxBKoEBgA6AmIGBgD6BZUGBgC/BfIEEgAKAl4EEgBrAl4EEgDkAd0E
BgAfAnUGCgBMBCMEFgAyB1gBFgDuAFgBBgDaBS4AFgCNB1gBFgAKBlgBBgDLBS4ABgD9A6oEDgB2
BaMFDgCKAGsABgCVAKoEDgBhBV8ADgDJAV8ADgCaAGsADgAcBmsADgAfBqMFDgBMBV8ADgDSBF8A
DgC1AOkHDgCdAKMFDgApBekHDgDiA+kHBgB4AaoEBgADAaoEBgA6CBcFAAAAACUAAAAAAAEAAQAB
ABAAxwQBADkAAQABAAAAEACcBvgGWQABAAMAAAEQAFgH+AZ5AAMABwADAQAAqQcAAGEABAAKABEA
tgQtAREAnQExAREAwAA1AQYGVwA5AVaAmQc8AVaAfQE8AVAgAAAAAIYAzQQGAAEAiCQAAAAAhhhV
BgYAAQCQJAAAAACDGFUGBgABAJgkAAAAAJMI9gVAAQEAxCQAAAAAkwiFAUUBAQDLJAAAAACTCJEB
SgEBANMkAAAAAJYIzgdQAQIA2iQAAAAAhhhVBgYAAgDiJAAAAACRGFsGVQECAAAAAQDCAwkAVQYB
ABEAVQYGABkAVQYKACkAVQYQADEAVQYQADkAVQYQAEEAVQYQAEkAVQYQAFEAVQYQAFkAVQYQAGEA
VQYQAGkAVQYGAMkAVQYGAOkAVQYVAPkAVQYGAHEAoQdFAAEBLgdLAAkBoQRRABEBuANYALEA+wNc
ABkBVQYQABkBPAdgAHkAVQYGAAEBiQdmACEBoQRsAAEBBwVYACkBgwVzADEBJwFcADkBwAd4ADkB
wAd/AIkAVQYQAEEBwgQGAEkBJweFAIkA0ACKAKEAtweUAGEBRwaaAJEA/wdYAJkAoQSfADkBYQek
AGkBVQapAHEBVQawAKEAVQYGAHkBnAS3AEEB/AEGAKEAage9AGEBCwjDAIEBoQTHAIkBSQFcADkB
wAfOAHkApwDWAJkBHggQAJkB6AVYAKkAVQbcAKkAMAEQAKkARQfiAKEBhgDoAJEAFQjwALkAAgIG
AKkALQb0AAEB2gcBAHEAVQYGALEAVQYGALEBFQH6ALEBNggDAdEAVQYJAfEAVQYGAAgAFAAjAQgA
GAAoASkAcwCQAS4ACwBoAS4AEwBxAS4AGwCQAS4AIwCZAS4AKwDCAS4AMwDCAS4AOwDCAS4AQwCZ
AS4ASwDIAS4AUwDCAS4AWwDfAUMAYwAoAUkAcwCQAWEAewAoAWMAawAoARsAAwABAAQAAwAAAPoF
WQEAAKUBXgEAANIHYwECAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAH0eI3wAAAAAAAAB
AAAABAAAAAAAAAAAAAAAEQF9AAAAAAAPAAAAAAAAAAAAAAAaAQQEAAAAAAQAAAAAAAAAAAAAABEB
XwAAAAAABAAAAAAAAAAAAAAAEQGqBAAAAAAPAAAAAAAAAAAAAAAaATgAAAAAAAAAAAABAAAApgYA
AAUAAgAAAABTVF9hNTM3MmYwZTE2ZTQ0NmIwYWZkODE5YTMzZDIxNzQyMAA8TW9kdWxlPgBTeXN0
ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU3lzdGVtLkRhdGEA
U3lzdGVtLkRhdGEuT2xlRGIAbXNjb3JsaWIAQWRkAE9sZURiU2NoZW1hR3VpZABPbGVEYkNvbW1h
bmQAQ3JlYXRlQ29tbWFuZABTcWxDb21tYW5kAGRlZmF1bHRJbnN0YW5jZQBHZXRPbGVEYlNjaGVt
YVRhYmxlAERhdGFUYWJsZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBH
ZXRUeXBlRnJvbUhhbmRsZQBnZXRfTmFtZQBzZXRfRGVzdGluYXRpb25UYWJsZU5hbWUAZ2V0X0Nv
bHVtbk5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0
X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1v
ZGVsQmFzZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBDbG9zZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0
cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBF
ZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRy
YWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25S
ZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5
cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5
Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUA
dmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBTcWxCdWxrQ29weUNvbHVtbk1hcHBpbmcA
VG9TdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVu
dE1vZGVsAFNUX2E1MzcyZjBlMTZlNDQ2YjBhZmQ4MTlhMzNkMjE3NDIwLmRsbABGaWxsAGdldF9J
dGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAE9wZW4AU2NyaXB0TWFpbgBEYXRhQ29sdW1uAFN5
c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAGdldF9UcmFuc2FjdGlvbgBT
eXN0ZW0uUmVmbGVjdGlvbgBTcWxCdWxrQ29weUNvbHVtbk1hcHBpbmdDb2xsZWN0aW9uAERhdGFD
b2x1bW5Db2xsZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAE9sZURiQ29ubmVjdGlvbgBBY3F1aXJl
Q29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBGaWxlSW5mbwBDdWx0
dXJlSW5mbwBGaWxlU3lzdGVtSW5mbwBEaXJlY3RvcnlJbmZvAEV4ZWN1dGVTY2FsYXIAZ2V0X1Jl
c291cmNlTWFuYWdlcgBDb25uZWN0aW9uTWFuYWdlcgBPbGVEYkRhdGFBZGFwdGVyAFdyaXRlVG9T
ZXJ2ZXIASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdu
b3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBT
VF9hNTM3MmYwZTE2ZTQ0NmIwYWZkODE5YTMzZDIxNzQyMC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5y
ZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfYTUzNzJmMGUxNmU0NDZiMGFmZDgxOWEzM2QyMTc0
MjAuUHJvcGVydGllcwBUYWJsZXMAZ2V0X1ZhcmlhYmxlcwBHZXRGaWxlcwBnZXRfQ29sdW1uTWFw
cGluZ3MAU2V0dGluZ3MAQ29udGFpbnMAZ2V0X0NvbHVtbnMAU3lzdGVtLkNvbGxlY3Rpb25zAGdl
dF9Db25uZWN0aW9ucwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfUm93cwBDb25j
YXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVu
dABnZXRfQ3VycmVudABnZXRfQ291bnQATW92ZU5leHQAc2V0X0NvbW1hbmRUZXh0AERhdGFSb3cA
Z2V0X0Fzc2VtYmx5AFNxbEJ1bGtDb3B5AAAAJVUAcwBlAHIAOgA6AFMAbwB1AHIAYwBlAEYAbwBs
AGQAZQByAAAfVQBzAGUAcgA6ADoAVABhAGIAbABlAE4AYQBtAGUAACFVAHMAZQByADoAOgBTAGMA
aABlAG0AYQBOAGEAbQBlAAABAC1EAEIAXwBDAG8AbgBuAF8AVABlAGMAaABCAHIAbwB0AGgAZQBy
AHMASQBUAAADXAAAB1kARQBTAABdUAByAG8AdgBpAGQAZQByAD0ATQBpAGMAcgBvAHMAbwBmAHQA
LgBBAEMARQAuAE8ATABFAEQAQgAuADEAMgAuADAAOwBEAGEAdABhACAAUwBvAHUAcgBjAGUAPQAA
SzsARQB4AHQAZQBuAGQAZQBkACAAUAByAG8AcABlAHIAdABpAGUAcwA9ACIARQB4AGMAZQBsACAA
MQAyAC4AMAA7AEgARABSAD0AABE7AEkATQBFAFgAPQAwACIAABVUAEEAQgBMAEUAXwBOAEEATQBF
AAADJAAAK3MAZQBsAGUAYwB0ACAAdABvAHAAIAAxACAAKgAgAGYAcgBvAG0AIABbAAADXQAAAycA
AQUnACwAAYC7cwBlAGwAZQBjAHQAIABTAFQAVQBGAEYAKAAoAFMAZQBsAGUAYwB0ACAAIAAnACwA
WwAnACsAQwBvAGwAdQBtAG4AXwBOAGEAbQBlACsAJwBdACcAIABmAHIAbwBtACAASQBuAGYAbwBy
AG0AYQB0AGkAbwBuAF8AcwBjAGgAZQBtAGEALgBDAG8AbAB1AG0AbgBzACAAdwBoAGUAcgBlACAA
VABhAGIAbABlAF8ATgBhAG0AZQA9ACcAASknACAAYQBuAGQAIABUAGEAYgBsAGUAXwBTAEMAaABl
AG0AYQA9ACcAASsnAGEAbgBkACAAQwBvAGwAdQBtAG4AXwBOAGEAbQBlACAAaQBuACAAKAABUykA
IABmAG8AcgAgAHgAbQBsACAAcABhAHQAaAAoACcAJwApACkALAAxACwAMQAsACcAJwApACAAQQBT
ACAAQwBvAGwAdQBtAG4ATABpAHMAdAABD3MAZQBsAGUAYwB0ACAAAAUsACcAAR8nACAAQQBTACAA
RgBpAGwAZQBOAGEAbQBlACwAJwABKycAIABBAFMAIABTAGgAZQBlAHQATgBhAG0AZQAgAGYAcgBv
AG0AIABbAAEDLgAAcVMAVABfAGEANQAzADcAMgBmADAAZQAxADYAZQA0ADQANgBiADAAYQBmAGQA
OAAxADkAYQAzADMAZAAyADEANwA0ADIAMAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBv
AHUAcgBjAGUAcwAA9Eq9ZOa8BUya4h0KnFRlQgAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERcSkH
Gg4ODg4SPR0SQQgSQQ4ODhJFDhJJEk0SUQ4ODhJFElEIElUSSRwSXQUgABKAgQUgABKAhQYgARKA
iRwDIAAcAyAADgUgAB0SQQUgABKAkQYgARKAlRwEIAEcHAYAAw4ODg4FAAEOHQ4EBhGAqQkgAhJR
EYCpHRwFIAASgK0EIAASSQQgARwOBCABAg4GIAIBDhJFBiABARKAtQUgAQgSUQUgABKAwQMgAAgG
IAESgMUIBwAEDg4ODg4FIAASgMkFIAEBEj0FIAASgNEHIAISgNUODgMgAAIFIAEBElEIAAESgNkR
gN0FIAASgOEHIAIBDhKA4Qi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJpAwYSbQMGEhAC
BggDBhEUBAAAEmkEAAASbQUAAQESbQQAABIQAwAAAQQIABJpBAgAEm0ECAASEAgBAAgAAAAAAB4B
AAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfYTUzNzJmMGUxNmU0
NDZiMGFmZDgxOWEzM2QyMTc0MjAAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5O
RVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZy
YW1ld29yayA0LjcAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAGDoAAAAAAAAAAAAAMjoAAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAACQ6AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAjfH0eAAABACN8fR4/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfAGEANQAzADcAMgBmADAAZQAxADYAZQA0ADQANgBiADAAYQBmAGQAOAAxADkAYQAzADMAZAAy
ADEANwA0ADIAMAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3ADgA
MAA1AC4AMwAxADcANwA5AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
AGEANQAzADcAMgBmADAAZQAxADYAZQA0ADQANgBiADAAYQBmAGQAOAAxADkAYQAzADMAZAAyADEA
NwA0ADIAMAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQA
ZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBUAF8AYQA1ADMANwAyAGYAMABlADEANgBlADQANAA2AGIAMABhAGYAZAA4ADEAOQBhADMA
MwBkADIAMQA3ADQAMgAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAVABfAGEANQAzADcAMgBmADAAZQAxADYAZQA0ADQANgBiADAAYQBmAGQAOAAxADkAYQAzADMA
ZAAyADEANwA0ADIAMAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4ANwA4ADAANQAuADMAMQA3ADcAOQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4ANwA4ADAANQAuADMAMQA3ADcAOQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABEOgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Script Task"
          TopLeft="269.666656169627,125.100000950495" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>